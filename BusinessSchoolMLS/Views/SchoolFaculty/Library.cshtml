@using MRTD.Core.Models;
@using MRTD.Core.Common;
@using BusinessSchoolMLS.SchoolBusinessComponent;

@{
    ViewData["Title"] = "Learning Material";
    string mid = ViewBag.MemGuid;
    int UnitID = ViewBag.UnitID;
    string UnitName = string.Empty;

    FacultyBusinessComponent facultyBusinessComponent = new FacultyBusinessComponent();

    List<ModuleModel> moduleModules = facultyBusinessComponent.GetAllStudyUnits(Session.AppSession["ClientId"].ToString());

    List<RequiredUploadedDocModel> requiredUploadedDocModels = facultyBusinessComponent.GetAllUnitUploadType();

    var lst_all_registered_units = facultyBusinessComponent.GetRegisteredUnitByMemberID(mid);

    var lst_learing_materials = default(List<StudyMaterialModel>);

    if (UnitID != 0)
    {
        lst_learing_materials = facultyBusinessComponent.GetUnitLearningMaterialByUnitID(UnitID);
        UnitName = moduleModules.FirstOrDefault(unit => unit.ModuleID.Equals(UnitID.ToString())).ModuleName;
    }
}

<style type="text/css">
    .auto-complete {
        border-left: 1px solid black;
        border-bottom: 1px solid black;
        border-right: 1px solid black;
        z-index: 1000;
        position: absolute;
        background-color: white;
        height: auto;
    }
</style>

<script src="https://code.jquery.com/jquery-1.10.2.js"></script>

<script type="text/javascript">

    function getLabelHeader(headers) {

        var header_arr = new Array();

        $.each(headers, function (key, value) {
            header_arr.push({ Value: key, Text: value });
        });

        return header_arr
    }

    function contains(sarchedString, searchItem) {

        if (sarchedString.toLowerCase().indexOf(searchItem.toLowerCase()) >= 0) {
            return true;
        }

        return false;
    }

    function autoComplete(currentCtrl, comparer, headers, jsondata) {

        if ($(currentCtrl).val() != "") {

            var search_value = $(currentCtrl).val();
            $(currentCtrl).parent().find(".auto-complete").each(function (index) { $(this).remove(); });

            var lst_all_headers = getLabelHeader(headers),
                div_autocomplete = $(document.createElement("div")),
                tbl_autocomplete = $(document.createElement("table")),
                tbl_autocomplete_header = $(document.createElement("thead")),
                tbl_autocomplete_t_row = $(document.createElement("tr"));
            div_autocomplete.addClass("auto-complete");
            tbl_autocomplete.addClass("table");
            tbl_autocomplete.css("width", "95%");
            tbl_autocomplete.css("left", "2.5%");
            tbl_autocomplete.css("position", "relative");
            tbl_autocomplete_header.append(tbl_autocomplete_t_row);
            for (var header in lst_all_headers) {
                var row_th = $("<th>" + lst_all_headers[header].Text + "</th>");
                tbl_autocomplete_t_row.append(row_th);
            }

            tbl_autocomplete.append(tbl_autocomplete_header);
            div_autocomplete.css("width", $(currentCtrl).outerWidth() + "px");
            div_autocomplete.append(tbl_autocomplete);

            var tbl_body_autocomplete = $(document.createElement("tbody"));
            var atleast_exist = false;
            for (var row in jsondata) {

                var tbl_row_autocomplete = $(document.createElement("tr")),
                    data_row = getLabelHeader(jsondata[row]);

                tbl_row_autocomplete.bind("mouseenter", function (e) {
                    $(this).css("background-color", "silver");
                    $(this).css("cursor", "pointer");
                    $(this).bind("click", function () {
                        var selected_row = this.getElementsByTagName("td");
                        document.getElementById("search_value").value = $(selected_row[0]).text();
                        document.getElementById("search_text").value = $(selected_row[2]).text();
                        $(this).parent().parent().parent().parent().find(".auto-complete").each(function (index) { $(this).remove(); });
                    });
                });

                tbl_row_autocomplete.bind("mouseout", function (e) {
                    $(this).css("background-color", "");
                    $(this).unbind("click");
                });
                var is_campare = false;
                var exist = false;
                for (var key in data_row) {
                    if (comparer == data_row[key].Value) {
                        is_campare = contains(data_row[key].Text, search_value);
                        if (is_campare == true) {
                            exist = true;
                        }
                    }
                    $("<td>" + data_row[key].Text + "</td>").appendTo(tbl_row_autocomplete);
                }
                if (exist == true) {
                    atleast_exist = exist;
                    tbl_body_autocomplete.append(tbl_row_autocomplete);
                }
            }
            if (atleast_exist == true) {

                tbl_body_autocomplete.appendTo(tbl_autocomplete);

                $(currentCtrl).parent().append(div_autocomplete);
            }
        }
        else {
            $(currentCtrl).parent().find(".auto-complete").each(function (index) { $(this).remove(); });
        }
    }

    $(document).ready(function () {
        $.getJSON("/SchoolFaculty/GetRegisteredUnitByMemberID?MemberID=" + document.getElementById("MemberID").value,
            function (response) {
                $("#search_text").bind("keyup", function (e) {
                    var headers = { ID: "#", UnitID: "Unit ID", UnitName: "Unit Name" },
                        comparer = "UnitName";
                    autoComplete(this, comparer, headers, response);
                });
            });
    });
</script>


<div>
    &nbsp;
</div>
<div>
    <h4 style="color: #6d2829;">Learning Material</h4>
</div>

@if (lst_learing_materials != default(List<StudyMaterialModel>))
{
    <div>
        <div class="table-responsive">
            <table class="table">
                <thead>
                    <tr>
                        <th>Unit Name</th>
                        <th>File Name</th>
                        <th>Material Type</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var learning_material in lst_learing_materials)
                    {
                        <tr>
                            <td>@learning_material.ModuleName</td>
                            <td>@learning_material.UploadFileName</td>
                            <td>@learning_material.UploadTypeName</td>
                            <td>@Html.ActionLink("Download", "DownloadLearningMaterial", "SchoolFaculty", new { mid = mid, upid = learning_material.UploadID, file_name = learning_material.UploadFileName })</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}

<div>
    @using (Html.BeginForm("UploadMaterialStudyUnit", "SchoolFaculty", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <input type="hidden" name="MemberID" id="MemberID" value="@mid" />
        <div class="form-group">
            <label for="UnitID">Search Unit</label>
            <div class="form-group">
                <input type="hidden" name="UnitID" id="search_value" value="@UnitID" />
                <input type="text" id="search_text" class="form-control" value="@UnitName" autocomplete="off" />
            </div>
        </div>
        <div class="form-group">
            <label for="UploadType">Upload Type</label>
            <select class="form-control" name="UploadType">
                <option value="0">---Please select one---</option>
                @foreach (var upload_tpye in requiredUploadedDocModels)
                {
                    <option value="@upload_tpye.UploadID">@upload_tpye.UploadTypeName</option>
                }
            </select>
        </div>
        <div class="form-group">
            <label for="Upload">Upload Unit File</label>
            <input type="file" name="Upload" id="Upload" class="form-control" />
        </div>
        <div class="form-group" style="width: 100%; text-align: center;">
            <input type="submit" value="Upload" class="btn btn-default" style="width: 110px;" />
            @Html.ActionLink("Cancel", "Index", "Home", new { mid = mid }, new { @class = "btn btn-default" })
        </div>
    }
</div>

