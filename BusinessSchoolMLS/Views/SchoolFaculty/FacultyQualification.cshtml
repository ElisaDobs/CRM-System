
@model MRTD.Core.Models.QualificationModel;
@using MRTD.Core.Common;

@using BusinessSchoolMLS.SchoolBusinessComponent;

@{
    ViewData["Title"] = "Courses";
    var faculty_component = new FacultyBusinessComponent();
    string mguid = Session.AppSession["MemberID"].ToString();
    int fac_id = ViewBag.FacultyID;
    var lst_all_fac_quals = faculty_component.GetAllFacultyQualificationByFacultyID(fac_id);
    var faculty = faculty_component.GetAllBusinessFaculty(Session.AppSession["ClientId"].ToString()).First(fac => fac.FacultyID == fac_id);
}
<style type="text/css">
    .tipp-header {
        color: #6d2829;
    }

    .tipp-label {
        color: #377091;
    }

    .tipp-input-field {
        width: 85%;
    }

    .tipp-container {
        width: 100%;
        display: inline-block;
    }

    .tipp-left-align {
        width: 15%;
        display: inline-block;
    }

    .tipp-middle-align {
        width: 60%;
        display: inline-block;
    }

    .tipp-right-align {
        width: 15%;
        display: inline-block;
    }

    .tipp-error-message {
        color: red;
        width: 100%;
        text-align: left;
        display: none;
    }

    .tipp-btn-default {
        width: 120px;
        color: #6d2829;
    }

    .tipp-btn-container {
        width: 100%;
        left: 5%;
        position: relative;
        text-align: center;
    }

    .tipp-redirect-link {
        color: #377091;
    }

    a {
        color: #377091;
    }

    .tipp-logo {
        padding-top: 0px;
        top: 5px;
        position: absolute;
    }

    .tipp-logo-botton-line {
        background-color: #377091;
        width: 100%;
        height: 10px
    }

    .tipp-top-heading {
        top: 80px;
        position: absolute;
        width: 75%;
    }
    .tipp-custom-button {
        width: 140px;
        color: #ffffff !important;
        background-color: #377091 !important;
    }

    .tipp-custom-grid-button {
        width: 100px;
        color: #ffffff !important;
        background-color: #377091 !important;
    }

    a {
        color: #ffffff;
    }

    label {
        color: #377091 !important;
    }

    thead > tr {
        color: #ffffff !important;
        background-color: #377091 !important;
    }

    .tipp-redirect-link {
        color: #377091;
    }
</style>
<div class="tipp-top-heading">
    <div>
        <h4 class="tipp-header">Tipp Academy Courses</h4>
    </div>
    <div>
        <table id="tippConnectQualificationTable" class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th>Standard Unit ID</th>
                    <th>Name</th>
                    <th>Course</th>
                    <th>NQF Level</th>
                    <th>Credits</th>
                    <th></th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var fac_qual in lst_all_fac_quals)
                {
                    <tr>
                        <td>@fac_qual.UnitCode</td>
                        <td>@fac_qual.QualificationName</td>
                        <td>@fac_qual.QualificationType</td>
                        <td>@fac_qual.QualificationNQLevel</td>
                        <td>@fac_qual.Credit</td>
                        <td align="center">
                            <button type="button" class="btn btn-primary tipp-custom-grid-button" data-toggle="modal" data-target="#@fac_qual.UnitCode">
                                <span class="glyphicon glyphicon-edit"></span> Edit
                            </button>
                        </td>
                        <td align="center">
                            <a href="@Url.Action("FacultyModule", "SchoolFaculty", new { mid = mguid, fid = fac_id, qid = fac_qual.QualificationID })" class="btn btn-primary tipp-custom-grid-button">
                                <span class="glyphicon glyphicon-plus"></span> Unit
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div>
        @foreach (var fac_qual in lst_all_fac_quals)
        {
            <div id="@fac_qual.UnitCode" class="modal fade">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                            <h4 class="modal-title tipp-header">Edit Program</h4>
                        </div>
                        <div class="modal-body">
                            @using (Html.BeginForm("EditProgram", "SchoolFaculty", FormMethod.Post))
                            {
                                <input type="hidden" name="MemberID" value="@mguid" />
                                <input type="hidden" name="FacultyID" value="@fac_id" />
                                <input type="hidden" name="QualificationID" value="@fac_qual.QualificationID" />
                                <div class="form-group">
                                    <label for="QualTypeID">Program</label>
                                    <select class="form-control" name="QualTypeID">
                                        @foreach (var ml in Model.QualificationTypes)
                                        {
                                            if (int.Parse(ml.Value) == fac_qual.QualificationTypeID)
                                            {
                                                <option value="@ml.Value" selected="selected">@ml.Text</option>
                                            }
                                            else
                                            {
                                                <option value="@ml.Value">@ml.Text</option>
                                            }
                                        }
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label for="QualificationName">Name</label>
                                    <input type="text" name="QualificationName" class="form-control" value="@fac_qual.QualificationName" />
                                </div>
                                <div class="form-group">
                                    <label for="QualificationDescription">Description</label>
                                    <textarea name="QualificationDescription" class="form-control">@fac_qual.QualificationDescription</textarea>
                                </div>
                                <div class="form-group">
                                    <label for="QualificationUnitCode">Unit ID</label>
                                    <input type="text" name="QualificationUnitCode" class="form-control" value="@fac_qual.UnitCode" />
                                </div>
                                <div class="form-group">
                                    <label for="NQLevelID">NQF Level</label>
                                    <select name="NQLevelID" class="form-control">
                                        @foreach (var mo in Model.QualificationNQLevel)
                                        {
                                            if (int.Parse(mo.Value) == fac_qual.QualificationNQLevel)
                                            {
                                                <option value="@mo.Value" selected="selected">@mo.Text</option>
                                            }
                                            else
                                            {
                                                <option value="@mo.Value">@mo.Text</option>
                                            }
                                        }
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label for="Credit">Credit</label>
                                    <input type="number" name="Credit" class="form-control" value="@fac_qual.Credit" />
                                </div>
                                <div style="width: 100%; text-align: center;">
                                    <button type="submit" class="btn btn-primary tipp-custom-button" data-toggle="modal">Save</button>
                                    <button type="button" class="btn btn-primary tipp-custom-button" data-dismiss="modal">Cancel</button>
                                </div>
                            }

                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <div id="CreateQualificationForm" class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title tipp-header">Create Program</h4>
                </div>
                <div class="modal-body">
                    @using (Html.BeginForm("AddQualification", "SchoolFaculty", FormMethod.Post))
                    {
                        <input type="hidden" name="MemberID" value="@mguid" />
                        <input type="hidden" name="FacultyID" value="@fac_id" />
                        <div class="form-group">
                            @Html.LabelFor(model => model.QualTypeID)
                            @Html.DropDownListFor(model => model.QualTypeID, Model.QualificationTypes, new { @class = "form-control" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.QualificationName)
                            @Html.TextBoxFor(model => model.QualificationName, new { @class = "form-control" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.QualificationDescription)
                            @Html.TextAreaFor(model => model.QualificationDescription, new { @class = "form-control" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.QualificationUnitCode)
                            @Html.TextBoxFor(model => model.QualificationUnitCode, new { @class = "form-control" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.NQLevelID)
                            @Html.DropDownListFor(model => model.NQLevelID, Model.QualificationNQLevel, new { @class = "form-control" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Credit)
                            @Html.TextBoxFor(model => model.Credit, new { @class = "form-control", @type = "number" })
                        </div>
                        <div style="width: 100%; text-align: center;">
                            <button type="submit" class="btn btn-primary tipp-custom-button" data-toggle="modal">Save</button>
                            <button type="button" class="btn btn-default tipp-custom-button"  data-dismiss="modal">Cancel</button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

</div>

<script type="text/javascript">

    /*
    Name        : Tsaleni Dobson Maswanganye
    Date        : 2022-08-28
 */
    function ShowNotification(type, title, text, item) {
        var shortCutFunction = type;
        var timeout = false;
        if (item !== undefined) {
            toastr.options = {
                closeButton: true,
                progressBar: false,
                positionClass: 'toast-top-right',
                onclick: function () { toastClick(item); },
                timeOut: timeout
            };
        }
        else {
            toastr.options = {
                closeButton: true,
                progressBar: false,
                positionClass: 'toast-top-right',
                onclick: function () { },
                timeOut: timeout
            };
        }
        var $toast = toastr[shortCutFunction](text, title);

        return false;
    }

    function toastClick(Item) {

    }

    function CheckPushWeNotification() {
        $.getJSON("/Administration/GetPushWebNotificationByMemberId?mid=" + $("#MemberID").val(), function (data) {
            var result = data;
            if (result !== null) {
                ShowNotification(result.PushType, result.PushTitle, result.PushText);
            }
        });
    }

    $(document).ready(function () {
        $("#tippConnectQualificationTable").DataTable({
            dom: 'Bfrtip',
            buttons: [
                {
                    text: 'Add Program'
                }
            ]
        });

        $("button.dt-button").attr("data-toggle", "modal");
        $("button.dt-button").attr("data-target", "#CreateQualificationForm");
        $("button.dt-button").addClass("tipp-custom-button");

        setInterval(function () {
            CheckPushWeNotification();
        }, 2000);

    });
</script>