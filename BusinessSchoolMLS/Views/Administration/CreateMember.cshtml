@model MRTD.Core.Models.ApplicationMemberModel;
@using MRTD.Core.Common;
@{
    ViewData["Title"] = "Staff Member";
    string mid = ViewBag.MemGuid;
}
<dv>
    &nbsp;
</dv>
<div>
    <h4 style="color: #6d2829;">Create Staff Member</h4>
</div>

<div>
    @using (Html.BeginForm("SaveStaffMember", "Administration", FormMethod.Post))
    {
        <input type="hidden" value="@Session.AppSession["ClientId"].ToString()" name="ClientID" />
        <input type="hidden" value="1" name="MemberTypeID" />
        <div>
            <div style="display: inline-block; width: 100%;">
                <div class="form-group" style="width: 45%; display: inline-block;">
                    @Html.LabelFor(model => model.FirstName)
                    @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control", validation = "required" })
                </div>
                <div class="form-group" style="width: 45%; display: inline-block;">
                    @Html.LabelFor(model => model.LastName)
                    @Html.TextBoxFor(model => model.LastName, new { @class = "form-control", validation = "required" })
                </div>
            </div>
            <div style="display: inline-block; width: 100%;">
                <div class="form-group" style="width: 45%; display: inline-block;">
                    @Html.LabelFor(model => model.IDNo)
                    @Html.TextBoxFor(model => model.IDNo, new { @class = "form-control", validation = "required" })
                </div>
                <div class="form-group" style="width: 45%; display: inline-block;">
                    @Html.LabelFor(model => model.GenderID)
                    @Html.DropDownListFor(model => model.GenderID, Model.Genders, new { @class = "form-control", validation = "select" })
                </div>
            </div>
            <div style="display: inline-block; width: 100%;">
                <div class="form-group" style="display: inline-block; width: 45%;">
                    @Html.LabelFor(model => model.CellNo)
                    @Html.TextBoxFor(model => model.CellNo, new { @class = "form-control", validation = "required" })
                </div>
                <div class="form-group" style="display: inline-block; width: 45%;">
                    @Html.LabelFor(model => model.EmailAddress)
                    @Html.TextBoxFor(model => model.EmailAddress, new { @class = "form-control", validation = "required" })
                </div>
            </div>
            <div style="display: inline-block; width: 100%;">
                <div class="form-group" style="display: inline-block; width: 45%;">
                    @Html.LabelFor(model => model.Password)
                    @Html.PasswordFor(model => model.Password, new { @class = "form-control", validation = "required" })
                </div>
                <div class="form-group" style="display: inline-block; width: 45%;">
                    @Html.LabelFor(model => model.ConfirmPassword)
                    @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control", validation = "required" })
                </div>
            </div>
            <div style="display: inline-block; width: 100%;">
                <div class="form-group" style="display: inline-block; width: 45%;">
                    @Html.LabelFor(model => model.RoleID)
                    @Html.DropDownListFor(model => model.RoleID, Model.StaffRoles, new { @class = "form-control", validation = "select" })
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Submit" class="btn btn-default" style="width: 110px;" />
                @Html.ActionLink("Cancel", "Index", "Home", new { mid = mid }, new { @class = "btn btn-default" })
            </div>
        </div>
    }
</div>
<script type="text/javascript" src="~/js/jquery-1.9.1.min.js"></script>
<script type="text/javascript">
        $(document).ready(function () {
            /*
     Author Name :     Tsaleni Dobson Maswanganye
     Date        :     2018 - 07 - 06
     Description :     Validate madatory fields
*/

            var SelectField = function (selectCtrl) {
                this.selectCtrl = selectCtrl;
                this.attach("change");
            };

            SelectField.prototype = {
                attach: function (e) {
                    var obj = this;
                    if (e === "change") {
                        obj.selectCtrl.bind(e, function () {
                            obj.selectCtrl.parent().find("span").remove();
                        });
                    }
                },
                validate: function () {
                    var obj = this;
                    if (obj.selectCtrl.find("option:selected").val() === "0") {
                        obj.selectCtrl.parent().find("span").remove();
                        obj.selectCtrl.parent().find("label").each(function () {
                            $("<span style='color: red;'> * required</span>").appendTo($(this));
                        });
                        return false;
                    }
                    else {
                        return true;
                    }
                }
            };

            var RequiredField = function (requiredCtrl) {
                this.requiredCtrl = requiredCtrl;
                this.attach("keyup");
            };

            RequiredField.prototype = {
                validate: function () {
                    var obj = this;
                    if (obj.requiredCtrl.val() === "") {
                        obj.requiredCtrl.parent().find("span").remove();
                        obj.requiredCtrl.parent().find("label").each(function (index) {
                            $("<span style='color: red;'> * Required</span>").appendTo($(this));
                        });
                        return false;
                    }
                    else {
                        return true;
                    }
                },
                attach: function (e) {
                    var obj = this;
                    if (e === "keyup") {
                        return obj.requiredCtrl.bind(e, function () {
                            obj.requiredCtrl.parent().find("span").remove();
                        });
                    }
                }
            };

            var RequiredNumberField = function (requiredNumberCtrl) {
                this.requiredNumberCtrl = requiredNumberCtrl;
                this.attach("keyup");
            };

            RequiredNumberField.prototype = {
                validate: function () {
                    var obj = this;
                    if (obj.requiredNumberCtrl.val() === "0") {
                        obj.requiredNumberCtrl.parent().find("span").remove();
                        obj.requiredNumberCtrl.parent().find("label").each(function (index) {
                            $("<span style='color: red;'> * Required</span>").appendTo($(this));
                        });
                        return false;
                    }
                    else {
                        return true;
                    }
                },
                attach: function (e) {
                    var obj = this;
                    if (e === "keyup") {
                        return obj.requiredNumberCtrl.bind(e, function () {
                            obj.requiredNumberCtrl.parent().find("span").remove();
                        });
                    }
                }
            };

            var RequiredDateField = function (requiredDateCtrl) {
                this.requiredDateCtrl = requiredDateCtrl;
                this.attach("keyup");
            };

            RequiredDateField.prototype = {
                validate: function () {
                    var obj = this;
                    if (obj.requiredDateCtrl.val() === "") {
                        obj.requiredDateCtrl.parent().find("span").remove();
                        obj.requiredDateCtrl.parent().find("label").each(function (index) {
                            $("<span style='color: red;'> * Required</span>").appendTo($(this));
                        });
                        return false;
                    }
                    else {
                        return true;
                    }
                },
                attach: function (e) {
                    var obj = this;
                    if (e === "keyup") {
                        return obj.requiredDateCtrl.bind(e, function () {
                            obj.requiredDateCtrl.parent().find("span").remove();
                        });
                    }
                }
            };

            var RequiredTimeField = function (requiredTimeCtrl) {
                this.requiredTimeCtrl = requiredTimeCtrl;
                this.attach("keyup");
            };

            RequiredTimeField.prototype = {
                validate: function () {
                    var obj = this;
                    if (obj.requiredTimeCtrl.val() === "") {
                        obj.requiredTimeCtrl.parent().find("span").remove();
                        obj.requiredTimeCtrl.parent().find("label").each(function (index) {
                            $("<span style='color: red;'> * Required</span>").appendTo($(this));
                        });
                        return false;
                    }
                    else {
                        return true;
                    }
                },
                attach: function (e) {
                    var obj = this;
                    if (e === "keyup") {
                        return obj.requiredTimeCtrl.bind(e, function () {
                            obj.requiredTimeCtrl.parent().find("span").remove();
                        });
                    }
                }
            };

            var Form = function (formCtrl) {
                this.formCtrl = formCtrl;
                var required_list = new Array();
                var select_list = new Array();
                var required_number_list = new Array();
                var required_date_list = new Array();
                var required_time_list = new Array();
                this.formCtrl.find("[validation=required]").each(function (index) {
                    required_list[index] = new RequiredField($(this));
                });
                this.formCtrl.find("[validation=select]").each(function (index) {
                    select_list[index] = new SelectField($(this));
                });
                this.formCtrl.find("[validation=number]").each(function (index) {
                    required_number_list[index] = new RequiredNumberField($(this));
                });
                this.formCtrl.find("[validation=date]").each(function (index) {
                    required_date_list[index] = new RequiredDateField($(this));
                });
                this.formCtrl.find("[validation=time]").each(function (index) {
                    required_time_list[index] = new RequiredTimeField($(this));
                });
                this.requireList = required_list;
                this.selectList = select_list;
                this.required_number_list = required_number_list;
                this.required_date_list = required_date_list;
                this.required_time_list = required_time_list;
            };

            Form.prototype = {
                valid: function () {
                    var obj = this,
                        is_valid = true;
                    for (var index = 0; index < obj.requireList.length; index++) {
                        if (!obj.requireList[index].validate())
                            is_valid = false;
                    }

                    for (var pIndex = 0; pIndex < obj.selectList.length; pIndex++) {
                        if (!obj.selectList[pIndex].validate()) {
                            is_valid = false;
                        }
                    }

                    for (var nIndex = 0; nIndex < obj.required_number_list.length; nIndex++) {
                        if (!obj.required_number_list[nIndex].validate())
                            is_valid = false;
                    }

                    for (var dIndex = 0; dIndex < obj.required_date_list.length; dIndex++) {
                        if (!obj.required_date_list[dIndex].validate())
                            is_valid = false;
                    }

                    for (var tIndex = 0; tIndex < obj.required_time_list.length; tIndex++) {
                        if (!obj.required_time_list[tIndex].validate())
                            is_valid = false;
                    }

                    return is_valid;
                }
            };

            var form = $(document.getElementsByTagName("form"));
            form.submit(function (e) {
                var validate_form = new Form(form);
                if (!validate_form.valid()) {
                    e.preventDefault();
                }
            });

            $("#IsSameAddress").change(function () {
                if (this.checked) {
                    $("#PostalAddress").val($("#PhysicalAddress").val());
                }
                else {
                    $("#PostalAddress").val("");
                }
            });

            $(document.getElementById("FacultyID")).bind("change", function () {
                var selectedIndex = "";
                var counter = 0;
                $("#FacultyID option:selected").each(function (index) {
                    $.getJSON("/Application/GetQualificationByFaculty?FacultyID=" + $(this).val(), function (data) {
                        if (counter < data.length) {
                            for (var opt in data) {
                                counter++;
                                var option = $(document.createElement("option"));
                                option.val(data[opt].QualificationID);
                                option.text(data[opt].QualificationName);
                                $("#QualificationID").append(option);
                            }
                        }
                    });
                });
            });
        });
</script>