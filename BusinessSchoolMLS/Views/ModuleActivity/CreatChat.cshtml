@using MRTD.Core.Common;
@using BusinessSchoolMLS.SchoolBusinessComponent;

@{
    ViewData["Title"] = "Create/Manage Chat";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ModuleActivityBusinessComponent component = new ModuleActivityBusinessComponent();
    var lst_active_chat = component.GetAllStudyUnitActive(Session.AppSession["ClientId"].ToString());
}
<style type="text/css">
    .tipp-header {
        color: #6d2829;
    }

    .tipp-label {
        color: #377091;
    }

    .tipp-input-field {
        width: 85%;
    }

    .tipp-container {
        width: 100%;
        display: inline-block;
    }

    .tipp-left-align {
        width: 15%;
        display: inline-block;
    }

    .tipp-middle-align {
        width: 60%;
        display: inline-block;
    }

    .tipp-right-align {
        width: 15%;
        display: inline-block;
    }

    .tipp-error-message {
        color: red;
        width: 100%;
        text-align: left;
        display: none;
    }

    .tipp-btn-default {
        width: 120px;
        color: #6d2829;
    }

    .tipp-btn-container {
        width: 100%;
        left: 5%;
        position: relative;
        text-align: center;
    }

    .tipp-redirect-link {
        color: #377091;
    }

    a {
        color: #377091;
    }

    .tipp-logo {
        padding-top: 0px;
        top: 5px;
        position: absolute;
    }

    .tipp-logo-botton-line {
        background-color: #377091;
        width: 100%;
        height: 10px
    }

    .tipp-top-heading {
        top: 80px;
        position: absolute;
        width: 75%;
    }

    .tipp-custom-button {
        width: 140px;
        color: #ffffff !important;
        background-color: #377091 !important;
    }

    .tipp-custom-grid-button {
        width: 100px;
        color: #ffffff !important;
        background-color: #377091 !important;
    }

    label {
        color: #377091 !important;
    }

    thead > tr {
        color: #ffffff !important;
        background-color: #377091 !important;
    }

    .tipp-redirect-link {
        color: #377091 !important;
    }
</style>
<div class="tipp-top-heading">
    <div>
        <h4 class="tipp-header">Create/Manage Chat</h4>
    </div>
    <div>
        <table id="tippUnitManageChat" class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th>Unit Name</th>
                    <th>Chat Name</th>
                    <th>Created By</th>
                    <th>Date Created</th>
                    <th>Chat Status</th>
                    <th></th>
                    <th></th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var active_chat in lst_active_chat)
                {
                    <tr>
                        <td>
                            @active_chat.ModuleName
                        </td>
                        <td>
                            @active_chat.ChatName
                        </td>
                        <td>
                            @active_chat.FullName
                        </td>
                        <td>
                            @active_chat.DateCreated.ToString("yyyy MM dd HH:mm:ss")
                        </td>
                        <td align="center">
                            @if (@active_chat.IsChatOpen)
                            {
                                <span class="glyphicon glyphicon-open"></span><span> Open</span>
                            }
                            else
                            {
                                <span class="glyphicon glyphicon-eye-close"></span><span> Closed</span>
                            }
                        </td>
                        <td align="center">
                            @if (@active_chat.IsChatOpen)
                            {
                                <a class="btn btn-primary btn-sm tipp-custom-grid-button" href="@Url.Action("CloseChat", "ModuleActivity", new { mid = Session.AppSession["MemberID"].ToString(), chatid = active_chat.ChatID })">
                                    <span class="glyphicon glyphicon-eye-close"></span> Close
                                </a>
                            }
                            else
                            {
                                <a class="btn btn-primary btn-sm tipp-custom-grid-button" href="@Url.Action("CloseChat", "ModuleActivity", new { mid = Session.AppSession["MemberID"].ToString(), chatid = active_chat.ChatID })">
                                    <span class="glyphicon glyphicon-eye-close"></span> Open
                                </a>
                            }
                        </td>
                        <td align="center">
                            <button type="button" class="btn btn-primary btn-sm tipp-custom-button" data-toggle="modal" data-target="#@string.Format("Chats-{0}", active_chat.ChatID)">
                                <span class="glyphicon glyphicon-list"></span> View Chats
                            </button>
                        </td>
                        <td align="center">
                            <button type="button" class="btn btn-primary btn-sm tipp-custom-button" data-toggle="modal" data-target="#@active_chat.ChatID">
                                <span class="glyphicon glyphicon-list"></span> Manage Chats
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@foreach (var active_chat in lst_active_chat)
{
    <div id="@string.Format("Chats-{0}", active_chat.ChatID)" class="modal fade">
        <div class="modal-dialog" style="width: 800px !important;">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title tipp-header">Chats - @active_chat.ChatName</h4>
                </div>
                <div class="modal-body">
                   @Html.Partial("_UnitChatView", new MemberViewModel { MUID = Session.AppSession["MemberID"].ToString(), ChatID = active_chat.ChatID })
                </div>
            </div>
        </div>
    </div>
}

@foreach (var active_chat in lst_active_chat)
{
    <div id="@active_chat.ChatID" class="modal fade">
        <div class="modal-dialog" style="width: 800px !important;">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title tipp-header">Manage Chat - @active_chat.ChatName</h4>
                </div>
                <div class="modal-body">
                    @Html.Partial("_ManageUnitChat", new MemberViewModel { MUID = Session.AppSession["MemberID"].ToString(), ChatID = active_chat.ChatID })
                </div>
            </div>
        </div>
    </div>
}

<div id="TippCreateChatForm" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title tipp-header">Create Unit Chat</h4>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("SaveChat", "ModuleActivity", FormMethod.Post))
                {
                    <input type="hidden" name="mid" id="mid" value="@Session.AppSession["MemberID"].ToString()" />
                    <div class="form-group">
                        <label for="txtChatName">Chat Name</label>
                        <input type="text" name="txtChatName" id="txtChatName" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label for="UnitID">Study Unit Name</label>
                        <input type="hidden" name="UnitID" id="search_value" />
                        <input type="text" id="search_text" class="form-control" autocomplete="off" />
                    </div>
                    <div class="form-group">
                    </div>
                    <div style="width: 100%; text-align: center;">
                        <button type="submit" class="btn btn-primary tipp-custom-button" data-toggle="modal">Save</button>
                        <button type="button" class="btn btn-primary tipp-custom-button" data-dismiss="modal">Cancel</button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@*<script type="text/javascript" src="~/js/jquery-1.9.1.min.js"></script>*@

<script type="text/javascript">

    function getLabelHeader(headers) {

        var header_arr = new Array();

        $.each(headers, function (key, value) {
            header_arr.push({ Value: key, Text: value });
        });

        return header_arr
    }

    function contains(sarchedString, searchItem) {

        if (sarchedString.toLowerCase().indexOf(searchItem.toLowerCase()) >= 0) {
            return true;
        }

        return false;
    }

    function autoComplete(currentCtrl, comparer, headers, jsondata) {

        if ($(currentCtrl).val() != "") {

            var search_value = $(currentCtrl).val();
            $(currentCtrl).parent().find(".auto-complete").each(function (index) { $(this).remove(); });

            var lst_all_headers = getLabelHeader(headers),
                div_autocomplete = $(document.createElement("div")),
                tbl_autocomplete = $(document.createElement("table")),
                tbl_autocomplete_header = $(document.createElement("thead")),
                tbl_autocomplete_t_row = $(document.createElement("tr"));
            div_autocomplete.addClass("auto-complete");
            tbl_autocomplete.addClass("table");
            tbl_autocomplete.css("width", "95%");
            tbl_autocomplete.css("left", "2.5%");
            tbl_autocomplete.css("position", "relative");
            tbl_autocomplete_header.append(tbl_autocomplete_t_row);
            for (var header in lst_all_headers) {
                var row_th = $("<th>" + lst_all_headers[header].Text + "</th>");
                tbl_autocomplete_t_row.append(row_th);
            }

            tbl_autocomplete.append(tbl_autocomplete_header);
            div_autocomplete.css("width", $(currentCtrl).outerWidth() + "px");
            div_autocomplete.append(tbl_autocomplete);

            var tbl_body_autocomplete = $(document.createElement("tbody"));
            var atleast_exist = false;
            for (var row in jsondata) {

                var tbl_row_autocomplete = $(document.createElement("tr")),
                    data_row = getLabelHeader(jsondata[row]);

                tbl_row_autocomplete.bind("mouseenter", function (e) {
                    $(this).css("background-color", "silver");
                    $(this).css("cursor", "pointer");
                    $(this).bind("click", function () {
                        var selected_row = this.getElementsByTagName("td");
                        document.getElementById("search_value").value = $(selected_row[0]).text();
                        document.getElementById("search_text").value = $(selected_row[2]).text();
                        $(this).parent().parent().parent().parent().find(".auto-complete").each(function (index) { $(this).remove(); });
                    });
                });

                tbl_row_autocomplete.bind("mouseout", function (e) {
                    $(this).css("background-color", "");
                    $(this).unbind("click");
                });
                var is_campare = false;
                var exist = false;
                for (var key in data_row) {
                    if (comparer == data_row[key].Value) {
                        is_campare = contains(data_row[key].Text, search_value);
                        if (is_campare == true) {
                            exist = true;
                        }
                    }
                    $("<td>" + data_row[key].Text + "</td>").appendTo(tbl_row_autocomplete);
                }
                if (exist == true) {
                    atleast_exist = exist;
                    tbl_body_autocomplete.append(tbl_row_autocomplete);
                }
            }
            if (atleast_exist == true) {

                tbl_body_autocomplete.appendTo(tbl_autocomplete);

                $(currentCtrl).parent().append(div_autocomplete);
            }
        }
        else {
            $(currentCtrl).parent().find(".auto-complete").each(function (index) { $(this).remove(); });
        }
    }

    $(document).ready(function () {

        $("#tippUnitManageChat").DataTable({
            dom: 'Bfrtip',
            buttons: [{
                text: "Add Chat"
            }]
        });

        $("button.dt-button").attr("data-toggle", "modal");
        $("button.dt-button").attr("data-target", "#TippCreateChatForm");
        $("button.dt-button").addClass("tipp-custom-button");


        $.getJSON("/SchoolFaculty/GetAllInstitutionModule?mid=" + document.getElementById("mid").value,
            function (response) {
                $("#search_text").bind("keyup", function (e) {
                    var headers = { ID: "#", UnitID: "Unit ID", UnitName: "Unit Name" },
                        comparer = "UnitName";
                    autoComplete(this, comparer, headers, response);
                });
            });
    });
</script>
